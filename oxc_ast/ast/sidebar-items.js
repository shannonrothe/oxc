window.SIDEBAR_ITEMS = {"enum":[["Argument","Section 13.3 Argument"],["AssignmentOperator",""],["AssignmentTarget","13.15.5 Destructuring Assignment"],["AssignmentTargetMaybeDefault",""],["AssignmentTargetPattern",""],["AssignmentTargetProperty",""],["BinaryOperator",""],["BindingPatternKind",""],["ChainElement",""],["ClassElement",""],["ClassType",""],["Declaration","Section 14.3 Declarations and the Variable Statement"],["ExportDefaultDeclarationKind",""],["Expression","Section 13 Expression"],["ForStatementInit",""],["ForStatementLeft",""],["FormalParameterKind",""],["FunctionType",""],["ImportAttributeKey",""],["ImportDeclarationSpecifier",""],["ImportOrExportKind",""],["JSXAttributeItem","`JSXAttributes` : `JSXSpreadAttribute` `JSXAttributes_opt` `JSXAttribute` `JSXAttributes_opt`"],["JSXAttributeName","`JSXAttributeName` : `JSXIdentifier` `JSXNamespacedName`"],["JSXAttributeValue","`JSXAttributeValue` : “ `JSXDoubleStringCharacters_opt` “ ’ `JSXSingleStringCharacters_opt` ’ { `AssignmentExpression` } `JSXElement` `JSXFragment`"],["JSXChild","`JSXChild` : `JSXText` `JSXElement` `JSXFragment` { `JSXChildExpression_opt` }"],["JSXElementName","`JSXElementName` : `JSXIdentifier` `JSXNamespacedName` `JSXMemberExpression`"],["JSXExpression",""],["JSXMemberExpressionObject",""],["LogicalOperator",""],["MemberExpression","Section 13.3 Member Expression"],["MethodDefinitionKind",""],["ModuleDeclarationKind",""],["ModuleExportName",""],["NumberBase",""],["ObjectPatternProperty",""],["ObjectProperty",""],["Operator",""],["PropertyKey",""],["PropertyKind",""],["PropertyValue",""],["SimpleAssignmentTarget",""],["Statement","Section 14 Statements"],["TSAccessibility",""],["TSEnumMemberName",""],["TSLiteral",""],["TSMappedTypeModifierOperator",""],["TSMethodSignatureKind",""],["TSModuleDeclarationBody",""],["TSModuleDeclarationName",""],["TSModuleReference",""],["TSSignature",""],["TSTupleElement",""],["TSType",""],["TSTypeName",""],["TSTypeOperator",""],["TSTypePredicateName",""],["UnaryOperator",""],["UpdateOperator",""],["VariableDeclarationKind",""]],"fn":[["is_false",""]],"struct":[["AccessorProperty",""],["ArrayAssignmentTarget",""],["ArrayExpression","Section 13.2.5 Array Expression"],["ArrayPattern",""],["ArrowExpression","Section 15.3 Arrow Function Definitions"],["AssignmentExpression","Section 13.15 Assignment Expression"],["AssignmentPattern",""],["AssignmentTargetPropertyIdentifier","`AssignmentProperty`[Yield, Await] : `IdentifierReference`[?Yield, ?Await] Initializer[+In, ?Yield, ?Await]opt"],["AssignmentTargetPropertyProperty","`AssignmentProperty`[Yield, Await] : `PropertyName`[?Yield, ?Await] : `AssignmentElement`[?Yield, ?Await]"],["AssignmentTargetWithDefault",""],["AwaitExpression","Section 15.8 Await Expression"],["BigintLiteral",""],["BinaryExpression","Section 13.6 - 13.13 Binary Expression"],["BindingIdentifier","Section 13.1 `BindingIdentifier`"],["BindingPattern","Section 14.3.3 Destructuring Binding Patterns"],["BlockStatement","Section 14.2 Block Statement"],["BooleanLiteral",""],["BreakStatement","Section 14.9 Break Statement"],["CallExpression","Section 13.3 Call Expression"],["CatchClause",""],["ChainExpression",""],["Class","Section 15.7 Class Definitions"],["ClassBody",""],["ComputedMemberExpression",""],["ConditionalExpression","Section 13.14 Conditional Expression"],["ContinueStatement","Section 14.8 Continue Statement"],["DebuggerStatement","Section 14.16 Debugger Statement"],["Decorator",""],["Directive","Section 11.2.1 Directive Prologue"],["DoWhileStatement","Section 14.7.2 Do-While Statement"],["EmptyObject",""],["EmptyStatement","Section 14.4 Empty Statement"],["ExportAllDeclaration",""],["ExportDefaultDeclaration",""],["ExportNamedDeclaration","Exports tc39/ecma262#sec-exports"],["ExportSpecifier",""],["ExpressionStatement","Section 14.5 Expression Statement"],["ForInStatement","Section 14.7.5 For-In Statement"],["ForOfStatement","Section 14.7.5 For-Of Statement"],["ForStatement","Section 14.7.4 For Statement"],["FormalParameter",""],["FormalParameters",""],["Function","Section 15.2 Function Definitions"],["FunctionBody",""],["IdentifierName","Section 12.6 `IdentifierName`"],["IdentifierReference","Section 13.1 `IdentifierReference`"],["IfStatement","Section 14.6 If Statement"],["ImportAttribute",""],["ImportDeclaration",""],["ImportDefaultSpecifier",""],["ImportExpression",""],["ImportNamespaceSpecifier",""],["ImportSpecifier",""],["JSDocNullableType",""],["JSDocUnknownType",""],["JSXAttribute","`JSXAttribute` : `JSXAttributeName` `JSXAttributeInitializer_opt`"],["JSXClosingElement","`JSXClosingElement` : < / `JSXElementName` >"],["JSXClosingFragment",""],["JSXElement","`JSXElement` : `JSXSelfClosingElement` `JSXOpeningElement` `JSXChildren_opt` `JSXClosingElement`"],["JSXEmptyExpression",""],["JSXExpressionContainer",""],["JSXFragment","`JSXFragment` : < > `JSXChildren_opt` < / >"],["JSXIdentifier",""],["JSXMemberExpression","`JSXMemberExpression` : `JSXIdentifier` . `JSXIdentifier` `JSXMemberExpression` . `JSXIdentifier`"],["JSXNamespacedName","`JSXNamespacedName` : `JSXIdentifier` : `JSXIdentifier`"],["JSXOpeningElement","`JSXOpeningElement` : < `JSXElementName` `JSXAttributes_opt` >"],["JSXOpeningFragment",""],["JSXSpreadAttribute","`JSXSpreadAttribute` : { … `AssignmentExpression` }"],["JSXSpreadChild",""],["JSXText","`JSXText` :: `JSXTextCharacter` `JSXTextopt` `JSXTextCharacter` :: `JSXStringCharacter` but not one of { or < or > or }"],["LabelIdentifier","Section 13.1 `LabelIdentifier`"],["LabeledStatement","Section 14.13 Labelled Statement"],["LogicalExpression","Section 13.13 Binary Logical Operators"],["MetaProperty","Section 13.3 Meta Property `new.target` | `import.meta`"],["MethodDefinition",""],["ModuleDeclaration","Section 16.2.2 Imports"],["NewExpression","Section 13.3 New Expression"],["NullLiteral",""],["NumberLiteral",""],["ObjectAssignmentTarget",""],["ObjectExpression","Section 13.2.6 Object Expression"],["ObjectPattern",""],["ParenthesizedExpression",""],["PrivateFieldExpression",""],["PrivateIdentifier",""],["PrivateInExpression","`RelationalExpression`[In, Yield, Await] : [+In] `PrivateIdentifier` in `ShiftExpression`[?Yield, ?Await]"],["Program",""],["Property",""],["PropertyDefinition",""],["RegExp",""],["RegExpFlags",""],["RegExpLiteral",""],["RestElement",""],["ReturnStatement","Section 14.10 Return Statement"],["SequenceExpression","Section 13.16 Sequence Expression"],["SpreadElement","Section 13.3 Spread Element"],["StaticBlock",""],["StaticMemberExpression",""],["StringLiteral",""],["Super",""],["SwitchCase",""],["SwitchStatement","Section 14.12 Switch Statement"],["TSAbstractMethodDefinition",""],["TSAbstractPropertyDefinition",""],["TSAnyKeyword",""],["TSArrayType","https://www.typescriptlang.org/docs/handbook/2/objects.html#the-array-type let myArray: string[] = [“hello”, “world”];"],["TSAsExpression",""],["TSBigIntKeyword",""],["TSBooleanKeyword",""],["TSCallSignatureDeclaration",""],["TSClassImplements",""],["TSConditionalType","https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#handbook-content `SomeType` extends `OtherType` ? `TrueType` : `FalseType`;"],["TSConstructSignatureDeclaration",""],["TSConstructorType",""],["TSEnumDeclaration","`EnumDeclaration`: `const_opt` enum `BindingIdentifier` { `EnumBody_opt` }"],["TSEnumMember",""],["TSExportAssignment",""],["TSExternalModuleReference",""],["TSFunctionType",""],["TSImportEqualsDeclaration",""],["TSImportType",""],["TSIndexSignature",""],["TSIndexSignatureName",""],["TSIndexedAccessType","https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html#handbook-content type I1 = Person[“age” | “name”];"],["TSInferType",""],["TSInstantiationExpression",""],["TSInterfaceBody",""],["TSInterfaceDeclaration","`InterfaceDeclaration`: interface `BindingIdentifier` `TypeParameters_opt` `InterfaceExtendsClause_opt` `ObjectType`"],["TSInterfaceHeritage",""],["TSIntersectionType","https://www.typescriptlang.org/docs/handbook/2/objects.html#intersection-types type `ColorfulCircle` = Colorful & Circle;"],["TSLiteralType",""],["TSMappedType",""],["TSMethodSignature",""],["TSModuleBlock",""],["TSModuleDeclaration",""],["TSNamedTupleMember",""],["TSNamespaceExportDeclaration",""],["TSNeverKeyword",""],["TSNonNullExpression",""],["TSNullKeyword",""],["TSNumberKeyword",""],["TSObjectKeyword",""],["TSOptionalType",""],["TSPropertySignature",""],["TSQualifiedName",""],["TSRestType",""],["TSStringKeyword",""],["TSSymbolKeyword",""],["TSTemplateLiteralType",""],["TSThisKeyword",""],["TSTupleType","https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types type `StringNumberPair` = [string, number];"],["TSTypeAliasDeclaration",""],["TSTypeAnnotation",""],["TSTypeAssertion",""],["TSTypeLiteral",""],["TSTypeOperatorType","https://www.typescriptlang.org/docs/handbook/2/keyof-types.html keyof unique readonly"],["TSTypeParameter",""],["TSTypeParameterDeclaration",""],["TSTypeParameterInstantiation",""],["TSTypePredicate",""],["TSTypeQuery",""],["TSTypeReference","type C = A; type D = B.a; type E = D.c.b.a;"],["TSUndefinedKeyword",""],["TSUnionType","https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes-func.html#unions string | string[] | (() => string) | { s: string }"],["TSUnknownKeyword",""],["TSVoidKeyword",""],["TaggedTemplateExpression",""],["TemplateElement",""],["TemplateElementValue",""],["TemplateLiteral","Section 13.2.9 Template Literal"],["ThisExpression","Section 13.2.2 This Expression"],["ThrowStatement","Section 14.14 Throw Statement"],["TryStatement","Section 14.15 Try Statement"],["UnaryExpression","Section 13.5 Unary Expression"],["UpdateExpression","Section 13.4 Update Expression"],["VariableDeclaration","Section 14.3.2 Variable Declaration"],["VariableDeclarator",""],["WhileStatement","Section 14.7.3 While Statement"],["WithStatement","Section 14.11 With Statement"],["YieldExpression","Section 15.5 Generator Function Definitions"]]};